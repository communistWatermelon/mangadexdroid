plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'org.jetbrains.kotlin.plugin.compose' version '2.0.0'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.melonhead.mangadexfollower'
    compileSdk 34

    def properties = new Properties()
    if (rootProject.file("local.properties").exists()) {
        properties.load(rootProject.file("local.properties").newDataInputStream())
    }

    def debugEmail = properties.getProperty("debug_email", "")
    def debugPassword = properties.getProperty("debug_password", "")

    defaultConfig {
        applicationId "com.melonhead.mangadexfollower"
        minSdk 24
        targetSdk 34
        versionCode 34
        versionName "1." + versionCode

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField("String", "DEBUG_EMAIL", "\"${debugEmail}\"")
        buildConfigField("String", "DEBUG_PASSWORD", "\"${debugPassword}\"")
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    lint {
        abortOnError false
        warningsAsErrors false
    }
}

tasks.register('generateVersionTxt') {
    doLast {
        file("./version.txt").text = android.defaultConfig.versionName + "." + android.defaultConfig.versionCode
    }
}

dependencies {

    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.3'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.8.3"

    implementation 'com.google.firebase:firebase-crashlytics-ktx:19.0.2'
    implementation 'com.google.firebase:firebase-analytics-ktx:22.0.2'
    testImplementation 'junit:junit:4.13.2'

    implementation "androidx.datastore:datastore-preferences:1.1.1"

    implementation "androidx.work:work-runtime-ktx:2.9.0"

    implementation 'com.google.accompanist:accompanist-swiperefresh:0.27.0'

    implementation "androidx.lifecycle:lifecycle-process:2.8.3"
    implementation "androidx.lifecycle:lifecycle-common:2.8.3"

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:33.1.1')

    // Add the dependency for the Realtime Database library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-database-ktx'

    implementation project(":core")
    implementation project(":core-ui")
    implementation project(":lib-app-events")
    implementation project(":lib-logging")
    implementation project(":lib-notifications")
    implementation project(":lib-navigation")
    implementation project(":lib-database")
    implementation project(":lib-app-context")
    implementation project(":lib-di")
    implementation project(":lib-networking")
    implementation project(":data-core-manga")
    implementation project(":data-core-manga-ui")
    implementation project(':data-manga')
    implementation project(':data-at-home')
    implementation project(':data-app-data')
    implementation project(':data-user')
    implementation project(':feature-authentication')
    implementation project(':lib-chapter-cache')
    implementation project(':feature-native-chapter-viewer')
    implementation project(':feature-webview-chapter-viewer')
}
