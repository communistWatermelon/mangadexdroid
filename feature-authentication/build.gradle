plugins {
    alias libs.plugins.android.library
    alias libs.plugins.kotlin.android
    alias libs.plugins.kotlinx.serialization
    alias libs.plugins.compose.plugin
}

android {
    namespace 'com.melonhead.feature_authentication'
    compileSdk 34

    def properties = new Properties()
    if (rootProject.file("local.properties").exists()) {
        properties.load(rootProject.file("local.properties").newDataInputStream())
    }

    def debugEmail = properties.getProperty("debug_email", "")
    def debugPassword = properties.getProperty("debug_password", "")

    defaultConfig {
        minSdk 24

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField("String", "DEBUG_EMAIL", "\"${debugEmail}\"")
        buildConfigField("String", "DEBUG_PASSWORD", "\"${debugPassword}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    implementation libs.bundles.common
    testImplementation libs.bundles.common.test
    implementation project(':lib-core')

    implementation project(":lib-networking")
    implementation project(":lib-logging")
    implementation project(":lib-notifications")
    implementation project(":lib-navigation")
    implementation project(":lib-app-context")
    implementation project(":lib-app-events")
    implementation project(":data-user")
    implementation project(":data-app-data")
    implementation project(":data-authentication")

    api project(":data-app-data")
}
